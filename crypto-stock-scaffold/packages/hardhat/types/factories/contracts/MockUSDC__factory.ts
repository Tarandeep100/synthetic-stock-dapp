/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { MockUSDC, MockUSDCInterface } from "../../contracts/MockUSDC";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "INITIAL_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "faucet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200147a3803806200147a8339810160408190526200003491620002c5565b80604051806040016040528060098152602001684d6f636b205553444360b81b815250604051806040016040528060048152602001635553444360e01b81525081600390816200008591906200039e565b5060046200009482826200039e565b5050506001600160a01b038116620000c757604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b620000d28162000102565b50620000fb81620000e66006600a6200057f565b620000f590620f424062000590565b62000154565b50620005c0565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216620001805760405163ec442f0560e01b815260006004820152602401620000be565b6200018e6000838362000192565b5050565b6001600160a01b038316620001c1578060026000828254620001b59190620005aa565b90915550620002359050565b6001600160a01b03831660009081526020819052604090205481811015620002165760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401620000be565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216620002535760028054829003905562000272565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620002b891815260200190565b60405180910390a3505050565b600060208284031215620002d857600080fd5b81516001600160a01b0381168114620002f057600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200032257607f821691505b6020821081036200034357634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000399576000816000526020600020601f850160051c81016020861015620003745750805b601f850160051c820191505b81811015620003955782815560010162000380565b5050505b505050565b81516001600160401b03811115620003ba57620003ba620002f7565b620003d281620003cb84546200030d565b8462000349565b602080601f8311600181146200040a5760008415620003f15750858301515b600019600386901b1c1916600185901b17855562000395565b600085815260208120601f198616915b828110156200043b578886015182559484019460019091019084016200041a565b50858210156200045a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620004c1578160001904821115620004a557620004a56200046a565b80851615620004b357918102915b93841c939080029062000485565b509250929050565b600082620004da5750600162000579565b81620004e95750600062000579565b81600181146200050257600281146200050d576200052d565b600191505062000579565b60ff8411156200052157620005216200046a565b50506001821b62000579565b5060208310610133831016604e8410600b841016171562000552575081810a62000579565b6200055e838362000480565b80600019048211156200057557620005756200046a565b0290505b92915050565b6000620002f060ff841683620004c9565b80820281158282048414176200057957620005796200046a565b808201808211156200057957620005796200046a565b610eaa80620005d06000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806370a08231116100a257806395d89b411161007157806395d89b4114610214578063a9059cbb1461021c578063dd62ed3e1461022f578063de5f72fd14610242578063f2fde38b1461024a57600080fd5b806370a08231146101b5578063715018a6146101de57806379cc6790146101e65780638da5cb5b146101f957600080fd5b80632ff2e9dc116100de5780632ff2e9dc14610176578063313ce5671461017e57806340c10f191461018d57806342966c68146101a257600080fd5b806306fdde0314610110578063095ea7b31461012e57806318160ddd1461015157806323b872dd14610163575b600080fd5b61011861025d565b6040516101259190610b82565b60405180910390f35b61014161013c366004610bed565b6102ef565b6040519015158152602001610125565b6002545b604051908152602001610125565b610141610171366004610c17565b610309565b61015561032d565b60405160068152602001610125565b6101a061019b366004610bed565b610349565b005b6101a06101b0366004610c53565b61045c565b6101556101c3366004610c6c565b6001600160a01b031660009081526020819052604090205490565b6101a061051e565b6101a06101f4366004610bed565b610532565b6005546040516001600160a01b039091168152602001610125565b610118610663565b61014161022a366004610bed565b610672565b61015561023d366004610c8e565b610680565b6101a06106ab565b6101a0610258366004610c6c565b61077f565b60606003805461026c90610cc1565b80601f016020809104026020016040519081016040528092919081815260200182805461029890610cc1565b80156102e55780601f106102ba576101008083540402835291602001916102e5565b820191906000526020600020905b8154815290600101906020018083116102c857829003601f168201915b5050505050905090565b6000336102fd8185856107bd565b60019150505b92915050565b6000336103178582856107cf565b610322858585610835565b506001949350505050565b6103396006600a610df5565b61034690620f4240610e04565b81565b610351610894565b6001600160a01b0382166103ac5760405162461bcd60e51b815260206004820152601e60248201527f4d6f636b555344433a206d696e7420746f207a65726f2061646472657373000060448201526064015b60405180910390fd5b6000811161040b5760405162461bcd60e51b815260206004820152602660248201527f4d6f636b555344433a206d696e7420616d6f756e74206d75737420626520706f60448201526573697469766560d01b60648201526084016103a3565b61041582826108c1565b816001600160a01b03167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d41213968858260405161045091815260200190565b60405180910390a25050565b6000811161047c5760405162461bcd60e51b81526004016103a390610e1b565b336000908152602081905260409020548111156104db5760405162461bcd60e51b815260206004820152601e60248201527f4d6f636b555344433a20696e73756666696369656e742062616c616e6365000060448201526064016103a3565b6104e533826108fb565b60405181815233907fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5906020015b60405180910390a250565b610526610894565b6105306000610931565b565b600081116105525760405162461bcd60e51b81526004016103a390610e1b565b6001600160a01b0382166105a85760405162461bcd60e51b815260206004820181905260248201527f4d6f636b555344433a206275726e2066726f6d207a65726f206164647265737360448201526064016103a3565b60006105b48333610680565b9050818110156106065760405162461bcd60e51b815260206004820181905260248201527f4d6f636b555344433a20696e73756666696369656e7420616c6c6f77616e636560448201526064016103a3565b6106118333846107cf565b61061b83836108fb565b826001600160a01b03167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca58360405161065691815260200190565b60405180910390a2505050565b60606004805461026c90610cc1565b6000336102fd818585610835565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60006106b96006600a610df5565b6106c5906103e8610e04565b90506106d281600a610e04565b33600090815260208190526040902054106107435760405162461bcd60e51b815260206004820152602b60248201527f4d6f636b555344433a206164647265737320616c72656164792068617320656e60448201526a6f75676820746f6b656e7360a81b60648201526084016103a3565b61074d33826108c1565b60405181815233907f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688590602001610513565b610787610894565b6001600160a01b0381166107b157604051631e4fbdf760e01b8152600060048201526024016103a3565b6107ba81610931565b50565b6107ca8383836001610983565b505050565b60006107db8484610680565b9050600019811461082f578181101561082057604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016103a3565b61082f84848484036000610983565b50505050565b6001600160a01b03831661085f57604051634b637e8f60e11b8152600060048201526024016103a3565b6001600160a01b0382166108895760405163ec442f0560e01b8152600060048201526024016103a3565b6107ca838383610a58565b6005546001600160a01b031633146105305760405163118cdaa760e01b81523360048201526024016103a3565b6001600160a01b0382166108eb5760405163ec442f0560e01b8152600060048201526024016103a3565b6108f760008383610a58565b5050565b6001600160a01b03821661092557604051634b637e8f60e11b8152600060048201526024016103a3565b6108f782600083610a58565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0384166109ad5760405163e602df0560e01b8152600060048201526024016103a3565b6001600160a01b0383166109d757604051634a1406b160e11b8152600060048201526024016103a3565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561082f57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610a4a91815260200190565b60405180910390a350505050565b6001600160a01b038316610a83578060026000828254610a789190610e61565b90915550610af59050565b6001600160a01b03831660009081526020819052604090205481811015610ad65760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016103a3565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216610b1157600280548290039055610b30565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610b7591815260200190565b60405180910390a3505050565b60006020808352835180602085015260005b81811015610bb057858101830151858201604001528201610b94565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610be857600080fd5b919050565b60008060408385031215610c0057600080fd5b610c0983610bd1565b946020939093013593505050565b600080600060608486031215610c2c57600080fd5b610c3584610bd1565b9250610c4360208501610bd1565b9150604084013590509250925092565b600060208284031215610c6557600080fd5b5035919050565b600060208284031215610c7e57600080fd5b610c8782610bd1565b9392505050565b60008060408385031215610ca157600080fd5b610caa83610bd1565b9150610cb860208401610bd1565b90509250929050565b600181811c90821680610cd557607f821691505b602082108103610cf557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115610d4c578160001904821115610d3257610d32610cfb565b80851615610d3f57918102915b93841c9390800290610d16565b509250929050565b600082610d6357506001610303565b81610d7057506000610303565b8160018114610d865760028114610d9057610dac565b6001915050610303565b60ff841115610da157610da1610cfb565b50506001821b610303565b5060208310610133831016604e8410600b8410161715610dcf575081810a610303565b610dd98383610d11565b8060001904821115610ded57610ded610cfb565b029392505050565b6000610c8760ff841683610d54565b808202811582820484141761030357610303610cfb565b60208082526026908201527f4d6f636b555344433a206275726e20616d6f756e74206d75737420626520706f60408201526573697469766560d01b606082015260800190565b8082018082111561030357610303610cfb56fea2646970667358221220934e32d16ebb33b768a247f804e98c2d5c31bcd75af0c7b1e1bc731d8f199e1c64736f6c63430008160033";

type MockUSDCConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockUSDCConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockUSDC__factory extends ContractFactory {
  constructor(...args: MockUSDCConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(initialOwner, overrides || {});
  }
  override deploy(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(initialOwner, overrides || {}) as Promise<
      MockUSDC & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockUSDC__factory {
    return super.connect(runner) as MockUSDC__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockUSDCInterface {
    return new Interface(_abi) as MockUSDCInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MockUSDC {
    return new Contract(address, _abi, runner) as unknown as MockUSDC;
  }
}
