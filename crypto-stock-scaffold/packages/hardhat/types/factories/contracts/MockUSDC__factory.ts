/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { MockUSDC, MockUSDCInterface } from "../../contracts/MockUSDC";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "INITIAL_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "faucet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080346200040a57601f1990601f6001600160401b03620012023881900383810186168501838111868210176200040f578592829160405283396020948591810103126200040a57516001600160a01b0380821695909290918690036200040a576200006a62000425565b60098152684d6f636b205553444360b81b868201526200008962000425565b90600495868352635553444360e01b888401528151928484116200030b576003938454936001948581811c91168015620003ff575b8c821014620003ea57908b828685941162000391575b50508b908583116001146200032c5760009262000320575b505060001982871b1c191690841b1784555b80519485116200030b5787548381811c9116801562000300575b8a821014620002eb57828111620002a0575b50889185116001146200023757849550908492916000956200022b575b50501b92600019911b1c19161782555b83156200021357600580546001600160a01b0319811686179091558491167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a360025464e8d4a5100091828201809211620001fe57506002556000838152808352604080822080548401905551918252917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a3604051610dbc9081620004468239f35b601190634e487b7160e01b6000525260246000fd5b604051631e4fbdf760e01b8152600081840152602490fd5b01519350388062000147565b9291948416928760005284896000209460005b8b898383106200028857505050106200026d575b50505050811b01825562000157565b01519060f884600019921b161c19169055388080806200025e565b8686015189559097019694850194889350016200024a565b88600052896000208380880160051c8201928c8910620002e1575b0160051c019084905b828110620002d45750506200012a565b60008155018490620002c4565b92508192620002bb565b602289634e487b7160e01b6000525260246000fd5b90607f169062000118565b604188634e487b7160e01b6000525260246000fd5b015190503880620000ec565b908c918a8895168960005283600020936000905b82821062000379575050841162000360575b505050811b018455620000fe565b015160001983891b60f8161c1916905538808062000352565b8385015186558a979095019493840193018f62000340565b909192508760005285826000209181860160051c8301938610620003e0575b918891869594930160051c01915b828110620003d057508d9150620000d4565b60008155859450889101620003be565b92508192620003b0565b60228b634e487b7160e01b6000525260246000fd5b90607f1690620000be565b600080fd5b634e487b7160e01b600052604160045260246000fd5b60408051919082016001600160401b038111838210176200040f5760405256fe6080604081815260048036101561001557600080fd5b600092833560e01c90816306fdde031461094257508063095ea7b31461089957806318160ddd1461087a57806323b872dd1461083d5780632ff2e9dc1461081d578063313ce5671461080157806340c10f19146106b757806342966c681461060b57806370a08231146105d4578063715018a61461057457806379cc6790146104555780638da5cb5b1461042c57806395d89b411461030a578063a9059cbb146102d9578063dd62ed3e1461028c578063de5f72fd146101705763f2fde38b146100de57600080fd5b3461016c57602036600319011261016c576100f7610a82565b90610100610cad565b6001600160a01b03918216928315610156575050600554826bffffffffffffffffffffffff60a01b821617600555167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b50903461016c578260031936011261016c57338352826020526402540be40081842054101561023557331561022057600254633b9aca009283820180921161020d575060025533835282602052808320828154019055805182815283600080516020610d6783398151915260203393a3519081527f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688560203392a280f35b634e487b7160e01b855260119052602484fd5b91602492519163ec442f0560e01b8352820152fd5b906020608492519162461bcd60e51b8352820152602b60248201527f4d6f636b555344433a206164647265737320616c72656164792068617320656e60448201526a6f75676820746f6b656e7360a81b6064820152fd5b5050346102d557806003193601126102d557806020926102aa610a82565b6102b2610a9d565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b5050346102d557806003193601126102d5576020906103036102f9610a82565b6024359033610be1565b5160018152f35b509190346102d557816003193601126102d55780519082845460018160011c9060018316928315610422575b602093848410811461040f578388529081156103f3575060011461039e575b505050829003601f01601f191682019267ffffffffffffffff84118385101761038b5750829182610387925282610a39565b0390f35b634e487b7160e01b815260418552602490fd5b8787529192508591837f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8385106103df5750505050830101388080610355565b8054888601830152930192849082016103c9565b60ff1916878501525050151560051b8401019050388080610355565b634e487b7160e01b895260228a52602489fd5b91607f1691610336565b5050346102d557816003193601126102d55760055490516001600160a01b039091168152602090f35b50903461016c578060031936011261016c5761046f610a82565b906024359161047f831515610ab3565b6001600160a01b0381169384156105315784865260016020528286203387526020528383872054106104ee5750916020916104e6827fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5956104e1823383610b0e565b610cd9565b51908152a280f35b606490602084519162461bcd60e51b8352820152602060248201527f4d6f636b555344433a20696e73756666696369656e7420616c6c6f77616e63656044820152fd5b606490602084519162461bcd60e51b8352820152602060248201527f4d6f636b555344433a206275726e2066726f6d207a65726f20616464726573736044820152fd5b83346105d157806003193601126105d15761058d610cad565b600580546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b5050346102d55760203660031901126102d55760209181906001600160a01b036105fc610a82565b16815280845220549051908152f35b50903461016c57602036600319011261016c5781359161062c831515610ab3565b3384528360205282828520541061067557506106488233610cd9565b519081527fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca560203392a280f35b6020606492519162461bcd60e51b8352820152601e60248201527f4d6f636b555344433a20696e73756666696369656e742062616c616e636500006044820152fd5b50903461016c578060031936011261016c576106d1610a82565b90602435916106de610cad565b6001600160a01b03169283156107bf57821561076e576002549083820180921161075b5750916020917f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885936002558486528583528086208281540190558486600080516020610d67833981519152858451868152a351908152a280f35b634e487b7160e01b865260119052602485fd5b6020608492519162461bcd60e51b8352820152602660248201527f4d6f636b555344433a206d696e7420616d6f756e74206d75737420626520706f60448201526573697469766560d01b6064820152fd5b6020606492519162461bcd60e51b8352820152601e60248201527f4d6f636b555344433a206d696e7420746f207a65726f206164647265737300006044820152fd5b5050346102d557816003193601126102d5576020905160068152f35b5050346102d557816003193601126102d5576020905164e8d4a510008152f35b5050346102d55760603660031901126102d55760209061030361085e610a82565b610866610a9d565b60443591610875833383610b0e565b610be1565b5050346102d557816003193601126102d5576020906002549051908152f35b503461016c578160031936011261016c576108b2610a82565b60243590331561092b576001600160a01b031691821561091457508083602095338152600187528181208582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b8351634a1406b160e11b8152908101859052602490fd5b835163e602df0560e01b8152808401869052602490fd5b849150833461016c578260031936011261016c578260035460018160011c9060018316928315610a2f575b602093848410811461040f57838852908115610a1357506001146109bd57505050829003601f01601f191682019267ffffffffffffffff84118385101761038b5750829182610387925282610a39565b600387529192508591837fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8385106109ff5750505050830101858080610355565b8054888601830152930192849082016109e9565b60ff1916878501525050151560051b8401019050858080610355565b91607f169161096d565b6020808252825181830181905290939260005b828110610a6e57505060409293506000838284010152601f8019910116010190565b818101860151848201604001528501610a4c565b600435906001600160a01b0382168203610a9857565b600080fd5b602435906001600160a01b0382168203610a9857565b15610aba57565b60405162461bcd60e51b815260206004820152602660248201527f4d6f636b555344433a206275726e20616d6f756e74206d75737420626520706f60448201526573697469766560d01b6064820152608490fd5b9160018060a01b038093169160009383855260016020526040938486209183169182875260205284862054926000198403610b4d575b50505050505050565b848410610bb157508015610b99578115610b8157855260016020528385209085526020520391205538808080808080610b44565b8451634a1406b160e11b815260048101879052602490fd5b845163e602df0560e01b815260048101879052602490fd5b8551637dc7a0d960e11b81526001600160a01b039190911660048201526024810184905260448101859052606490fd5b916001600160a01b03808416928315610c945716928315610c7b5760009083825281602052604082205490838210610c4957509160408282600080516020610d67833981519152958760209652828652038282205586815220818154019055604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101839052606490fd5b60405163ec442f0560e01b815260006004820152602490fd5b604051634b637e8f60e11b815260006004820152602490fd5b6005546001600160a01b03163303610cc157565b60405163118cdaa760e01b8152336004820152602490fd5b906001600160a01b038216908115610c945760009282845283602052604084205490828210610d34575081600080516020610d67833981519152926020928587528684520360408620558060025403600255604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101829052606490fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220ac0ab60a8fe22a2408674b92fff0671ef71fe8b8267c2083ddb550c0a585cc7164736f6c63430008160033";

type MockUSDCConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockUSDCConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockUSDC__factory extends ContractFactory {
  constructor(...args: MockUSDCConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(initialOwner, overrides || {});
  }
  override deploy(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(initialOwner, overrides || {}) as Promise<
      MockUSDC & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockUSDC__factory {
    return super.connect(runner) as MockUSDC__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockUSDCInterface {
    return new Interface(_abi) as MockUSDCInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MockUSDC {
    return new Contract(address, _abi, runner) as unknown as MockUSDC;
  }
}
